<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item1" object-name="workflow:name=generic" id="a821e0d3-584b-4f5e-8399-f2f6c117e12f" version="0.0.1" api-version="6.0.0" allowed-operations="evf" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[Import blueprint from zip mimeattachment]]></display-name>
  <position y="50.0" x="100.0"/>
  <input>
    <param name="host" type="vCACCAFE:VCACHost"/>
    <param name="mimeAttachment" type="MimeAttachment"/>
    <param name="overwriteContent" type="boolean"/>
  </input>
  <attrib name="status" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="errorMessage" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <workflow-item name="item0" type="end" end-mode="0">
    <position y="45.40909090909091" x="804.5"/>
  </workflow-item>
  <workflow-item name="item2" out-name="item0" type="task">
    <display-name><![CDATA[Import blueprint]]></display-name>
    <script encoded="false"><![CDATA[//If started by vRA the host is created dynamically
System.log(System.getObjectClassName(host));
if (System.getObjectClassName(host) == "NotFound") {
	// Creating the host
	var properties = {
		name: "name",
		url: "url",
		tenant: "tenant",
		sessionMode: "sessionMode",
		connectionTimeout: 30,
		operationTimeout: 60
	};
	
	host = vCACCAFEHostManager.createHost(properties).getHostForCurrentUser();
}



var restClient = host.createRestClient('com.vmware.csp.core.content.service.api');
var response = restClient.postFile("/packages", mimeAttachment);


System.log(response.getStatus());
System.log(response.getBodyAsString());
System.log(response.getHeaders());]]></script>
    <in-binding>
      <bind name="host" type="vCACCAFE:VCACHost" export-name="host"/>
      <bind name="mimeAttachment" type="MimeAttachment" export-name="mimeAttachment"/>
    </in-binding>
    <out-binding/>
    <position y="55.40909090909091" x="484.5"/>
  </workflow-item>
  <workflow-item name="item1" out-name="item3" type="task">
    <display-name><![CDATA[Validate zip]]></display-name>
    <script encoded="false"><![CDATA[//If started by vRA the host is created dynamically
System.log(System.getObjectClassName(host));
if (System.getObjectClassName(host) == "NotFound") {

	// Creating the host
	var properties = {
		name: "name",
		url: "url",
		tenant: "tenant",
		sessionMode: "sessionMode",
		connectionTimeout: 30,
		operationTimeout: 60
	};
	
	host = vCACCAFEHostManager.createHost(properties).getHostForCurrentUser();
}

var restClient = host.createRestClient('com.vmware.csp.core.content.service.api');


var response = restClient.postFile("/packages/validate", mimeAttachment);
var validation = JSON.parse(response.getBodyAsString());

//System.log(response.getBodyAsString());

status = validation.operationStatus;

if (status != "SUCCESS") {
	errorMessage = "\n";
	for each (var operationResult in validation.operationResults) {
		errorMessage += operationResult.contentName + " : \n";
		for each (var operationError in operationResult.operationErrors) {
			errorMessage += "\t" + operationError.errorMessage + "\n";
		}
		for each (var message in operationResult.messages) {
			errorMessage += "\t" + message + "\n";
		}
	}
}

		]]></script>
    <in-binding>
      <bind name="host" type="vCACCAFE:VCACHost" export-name="host"/>
      <bind name="mimeAttachment" type="MimeAttachment" export-name="mimeAttachment"/>
    </in-binding>
    <out-binding>
      <bind name="status" type="string" export-name="status"/>
      <bind name="errorMessage" type="string" export-name="errorMessage"/>
    </out-binding>
    <position y="55.40909090909091" x="204.5"/>
  </workflow-item>
  <workflow-item name="item3" out-name="item2" type="condition" alt-out-name="item6" comparator="0">
    <display-name><![CDATA[Valid ?]]></display-name>
    <script encoded="false"><![CDATA[//Generated by the system, cannot be edited
return (status == "SUCCESS") ;]]></script>
    <in-binding>
      <bind name="status" type="string" export-name="status"/>
    </in-binding>
    <condition name="status" type="string" comparator="0" label="null">SUCCESS</condition>
    <position y="45.40909090909091" x="344.5"/>
  </workflow-item>
  <workflow-item name="item6" out-name="item2" type="custom-condition" alt-out-name="item5">
    <display-name><![CDATA[Import on warning]]></display-name>
    <script encoded="false"><![CDATA[return (status == "WARNING" && overwriteContent == true);]]></script>
    <in-binding>
      <bind name="overwriteContent" type="boolean" export-name="overwriteContent"/>
      <bind name="status" type="string" export-name="status"/>
    </in-binding>
    <position y="109.04545454545453" x="345.0"/>
  </workflow-item>
  <workflow-item name="item5" throw-bind-name="errorMessage" type="end" end-mode="1">
    <position y="172.68181818181816" x="385.0"/>
  </workflow-item>
  <presentation>
    <p-param name="host">
      <desc><![CDATA[vRA host]]></desc>
      <p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
    </p-param>
    <p-param name="mimeAttachment">
      <desc><![CDATA[Blueprint zip file]]></desc>
      <p-qual kind="static" name="mandatory" type="boolean"><![CDATA[true]]></p-qual>
    </p-param>
    <p-param name="overwriteContent">
      <desc><![CDATA[overwriteContent]]></desc>
    </p-param>
  </presentation>
</workflow>