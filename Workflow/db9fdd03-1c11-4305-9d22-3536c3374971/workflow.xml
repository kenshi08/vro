<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<ns2:workflow xmlns:ns2="http://vmware.com/vco/workflow" root-name="item1" object-name="workflow:name=generic" id="db9fdd03-1c11-4305-9d22-3536c3374971" editor-version="1.6" version="0.0.0" api-version="6.0.0" allowed-operations="evf" restartMode="1" resumeFromFailedMode="0">
    <display-name>Scale Up vRA Deployment based on LB Load - SNMP</display-name>
    <position y="50.0" x="100.0"/>
    <input>
        <param name="lbName" type="string"/>
    </input>
    <output/>
    <attrib name="host" type="vCACCAFE:VCACHost">
        <value encoded="n">dunes://service.dunes.ch/CustomSDKObject?id='86324f9f-7b62-4866-a074-1d7b268dd551'&amp;dunesName='vCACCAFE:VCACHost'</value>
    </attrib>
    <attrib name="nsxConnection" type="NSX:Connection">
        <value encoded="n">dunes://service.dunes.ch/CustomSDKObject?id='76101eba-05ef-404b-9b3c-15d0beaf836d'&amp;dunesName='NSX:Connection'</value>
    </attrib>
    <attrib name="memberVMName" type="string">
        <value encoded="n"></value>
    </attrib>
    <attrib name="vmMoref" type="string">
        <value encoded="n"></value>
    </attrib>
    <workflow-item name="item0" type="end" end-mode="0" comparator="0">
        <position y="45.40909090909091" x="664.5"/>
    </workflow-item>
    <workflow-item name="item1" out-name="item2" type="task" comparator="0">
        <display-name>Get VM from LB name</display-name>
        <script encoded="false">System.log("LB name: "+lbName);

var resources = vCACCAFEEntitiesFinder.findCatalogResources(host , lbName);

System.log("Resouces: "+resources[0].parentResourceRef.id);

if(resources != null) {
	var lbResource = resources[0];
	
	var deploymentId = lbResource.parentResourceRef.id;
	//System.log("resourceData: "+lbResource.resourceData.get("NsxId"));
	
	var deployment = vCACCAFEEntitiesFinder.getCatalogResource(host , deploymentId);
	
	var nsxEdgeId = lbResource.resourceData.get("NsxId");
	
	var edge = NSXEdgeManager.getEdge(nsxConnection , nsxEdgeId);
	
	System.log("Edge: "+edge.lbAsJson+ "vmName: "+edge.vmHostName);
	
	/*var pool = new NSXPool();
	pool.objectId="1";
	*/
	var nsxPool = NSXAdvancedEdgeLBManager.getLBPoolFromEdgeIdPoolId(nsxConnection , nsxEdgeId, "pool-1") ;
	//var vs = NSXAdvancedEdgeLBManager.getLBPool(nsxConnection , edge, pool) ;

	
	System.log("member size: "+nsxPool.members.length);
	
	var member = nsxPool.members[0];
	
	System.log("member ip: "+member.ipAddress);
	
	var items = vCACCAFEEntitiesFinder.getCatalogResources(host);
	System.log("items: "+items.length);
	
	var memberVM;
	
	for each (var item in items)
	{
		if(item.resourceTypeRef.label == "Virtual Machine" &amp;&amp; item.parentResourceRef.id == deploymentId) {
			//System.log("item.requestId: "+item.requestId);
			//System.log("item.parentResourceRef: "+item.parentResourceRef);
			//System.log("item.resourceData: "+item.resourceData.get("NETWORK_LIST").getValue()[0].getValue().get("NETWORK_ADDRESS"));
			var vmIP = item.resourceData.get("NETWORK_LIST").getValue()[0].getValue().get("NETWORK_ADDRESS");
			System.log("vmIP: "+vmIP.getValue());
			if(member.ipAddress == vmIP.getValue()) {
				System.log("Member VM located. VM ID: "+item.id+"VM name: "+item.name);
				memberVM = item;
				memberVMName = item.name;
				break;
			}
			//System.log("item.resourceTypeRef: "+item.resourceTypeRef.label);
		} else {
			continue;
		}
	}
	//scaleOut(deployment);
}


function scaleOut(resource) {
		
		var operations = resource.getOperations();
			
		/*var actionInput = new Properties();
		actionInput.put("description","Destroy container from serverless build pipeline");
		actionInput.put("reasons","Destroy container from serverless build pipeline");*/
		
		for each(var operation in operations){
			System.log("operations "+operation.getName());
			if(operation.getName() == "Scale Out") {
				System.log("Operation 'Scale Out' found.");
				//System.getModule("com.vmware.library.vcaccafe.request").requestResourceAction(operation,actionInput);
				break;
			}
		}
}


</script>
        <in-binding>
            <bind name="lbName" type="string" export-name="lbName"/>
            <bind name="host" type="vCACCAFE:VCACHost" export-name="host"/>
            <bind name="nsxConnection" type="NSX:Connection" export-name="nsxConnection"/>
        </in-binding>
        <out-binding>
            <bind name="memberVMName" type="string" export-name="memberVMName"/>
        </out-binding>
        <position y="55.40909090909091" x="204.5"/>
    </workflow-item>
    <workflow-item name="item2" out-name="item3" type="task" comparator="0">
        <display-name>Get VM Moref from VM Name</display-name>
        <script encoded="false">var vm = findVms(vmName);
if(vm instanceof VcVirtualMachine) 
{
	System.log("Sucessfully located the vm object " + vm.name);
}
var vmMoref = vm.id;
System.log("VM Moref is: " + vmMoref);



function findVms(vmName) 
{
    var vms = VcPlugin.getAllVirtualMachines()
    var vmResult = null;
    for(var b=0; b&lt;vms.length; b++)
    { 
       if(vmName == vms[b].name)
       { 
         vmResult = vms[b];
         break;
       }
    } 
    return vmResult;
}</script>
        <in-binding>
            <bind name="vmName" type="string" export-name="memberVMName"/>
        </in-binding>
        <out-binding>
            <bind name="vmMoref" type="string" export-name="vmMoref"/>
        </out-binding>
        <position y="55.40909090909091" x="344.5"/>
    </workflow-item>
    <workflow-item name="item3" out-name="item0" type="link" linked-workflow-id="14d602b6-e1ff-4d15-83af-4f9a97928940" comparator="0">
        <display-name>Scale Up Blueprint Layer based on VM MOID</display-name>
        <in-binding>
            <bind name="targetId" type="string" export-name="vmMoref"/>
        </in-binding>
        <out-binding/>
        <position y="55.40909090909091" x="484.5"/>
    </workflow-item>
    <presentation>
        <p-param name="lbName">
            <desc>lbName</desc>
        </p-param>
    </presentation>
</ns2:workflow>
