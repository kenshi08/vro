<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item1" object-name="workflow:name=generic" id="96da20e4-ee9c-4c79-9884-dacde53a4da7" version="0.3.2" api-version="6.0.0" allowed-operations="evf" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[Mount CD-ROM]]></display-name>
  <description><![CDATA[Mounts the CD-ROM of a virtual machine. If the virtual machine has no IDE controller and/or CD-ROM drive, the workflow creates them.
]]></description>
  <position y="27.227272727272727" x="285.0"/>
  <input>
    <param name="vm" type="VC:VirtualMachine">
      <description><![CDATA[Virtual machine to which to add a CD-ROM]]></description>
    </param>
    <param name="connectAtPowerOn" type="boolean">
      <description><![CDATA[Connect the CD-ROM when the virtual machine powers on]]></description>
    </param>
    <param name="deviceType" type="string">
      <description><![CDATA[Device type]]></description>
    </param>
    <param name="filePath" type="string">
      <description><![CDATA[ISO file path]]></description>
    </param>
  </input>
  <attrib name="ideControllerKey" type="number" read-only="false">
    <value encoded="n"><![CDATA[__NULL__]]></value>
    <description><![CDATA[IDE controller key]]></description>
  </attrib>
  <attrib name="cdrom" type="Any" read-only="false">
    <value encoded="n"><![CDATA[__NULL__]]></value>
    <description><![CDATA[CD-ROM device]]></description>
  </attrib>
  <attrib name="deviceTypes" type="Array/string" read-only="false">
    <value encoded="n"><![CDATA[#{#string#Client Device#;#string#Host Device#;#string#Datastore ISO File#}#]]></value>
    <description><![CDATA[Array of predefined possible types of CD-ROM drives]]></description>
  </attrib>
  <attrib name="task" type="VC:Task" read-only="false">
    <value encoded="n"><![CDATA[__NULL__]]></value>
    <description><![CDATA[Task to await]]></description>
  </attrib>
  <attrib name="progress" type="boolean" read-only="false">
    <value encoded="n"><![CDATA[false]]></value>
    <description><![CDATA[Log progress while waiting for the task to complete]]></description>
  </attrib>
  <attrib name="pollRate" type="number" read-only="false">
    <value encoded="n"><![CDATA[1.0]]></value>
    <description><![CDATA[Polling rate for the task state, in seconds]]></description>
  </attrib>
  <workflow-item name="item1" out-name="item2" type="task">
    <display-name><![CDATA[Retrieve IDE Bus controller 0]]></display-name>
    <script encoded="false"><![CDATA[ideControllerKey = -1;
var devices = vm.config.hardware.device;
if ( devices != null )  {
	for ( ii in devices )  {
		if ( devices[ii] instanceof VcVirtualIDEController )  {
			if ( devices[ii].busNumber == 0 )  {
				ideControllerKey = devices[ii].key;
				System.log( "Found IDE controller (Key: " + ideControllerKey + ") for busNumber " + devices[ii].busNumber );
				break;
			}
		}
	}
}
]]></script>
    <in-binding>
      <bind name="vm" type="VC:VirtualMachine" export-name="vm"/>
    </in-binding>
    <out-binding>
      <bind name="ideControllerKey" type="number" export-name="ideControllerKey"/>
    </out-binding>
    <position y="37.22727272727273" x="385.0"/>
  </workflow-item>
  <workflow-item name="item2" out-name="item4" type="condition" alt-out-name="item8" comparator="0">
    <display-name><![CDATA[IDE Bus 0 found ?]]></display-name>
    <script encoded="false"><![CDATA[//Generated by the system, cannot be edited
return (ideControllerKey >= 0.0) ;]]></script>
    <in-binding>
      <bind name="ideControllerKey" type="number" export-name="ideControllerKey"/>
    </in-binding>
    <condition name="ideControllerKey" type="number" comparator="5" label="null">0.0</condition>
    <position y="90.86363636363636" x="385.0"/>
  </workflow-item>
  <workflow-item name="item4" out-name="item6" type="task">
    <display-name><![CDATA[Retrieve CD-ROM]]></display-name>
    <script encoded="false"><![CDATA[var devices = vm.config.hardware.device;
cdrom = null;
if ( devices != null )  {
	for ( ii in devices )  {
		if ( devices[ii] instanceof VcVirtualCdrom )  {
			if ( devices[ii].controllerKey == ideControllerKey )  {
				System.log( "Found CD-ROM" );
				cdrom = devices[ii];
				break;
			}
		}
	}
}
]]></script>
    <in-binding>
      <bind name="vm" type="VC:VirtualMachine" export-name="vm"/>
      <bind name="ideControllerKey" type="number" export-name="ideControllerKey"/>
    </in-binding>
    <out-binding>
      <bind name="cdrom" type="Any" export-name="cdrom"/>
    </out-binding>
    <position y="209.95454545454544" x="385.0"/>
  </workflow-item>
  <workflow-item name="item6" color="3399ffff" out-name="item9" type="task">
    <display-name><![CDATA[(Re)Configure CD-ROM]]></display-name>
    <script encoded="false"><![CDATA[// Connectable info for CD-ROM
var connectInfo = new VcVirtualDeviceConnectInfo();
connectInfo.allowGuestControl = true;
connectInfo.connected = true;
connectInfo.startConnected = connectAtPowerOn;

// Create CD-ROM BackingInfo
var backingInfo = null;
if ( deviceType == "Client Device" )  {
	backingInfo = new VcVirtualCdromRemotePassthroughBackingInfo();
	backingInfo.deviceName = "";
}
else if ( deviceType == "Host Device" )  {
	backingInfo = new VcVirtualCdromAtapiBackingInfo();
	backingInfo.deviceName = "/dev/cdrom";
}
else if ( deviceType == "Datastore ISO File" )  {
 	backingInfo = new VcVirtualCdromIsoBackingInfo();
	backingInfo.fileName = filePath;
}
else  {
	throw "Unsupported CD-ROM device type (" + deviceType + ")";
}

// CD-ROM ConfigSpec
var deviceConfigSpec = new VcVirtualDeviceConfigSpec();

if (cdrom == null) {
	// device not found, create and add a new one
	cdrom = new VcVirtualCdrom();
	cdrom.controllerKey = ideControllerKey;
	cdrom.key = 0;
	cdrom.unitNumber = 0;
	deviceConfigSpec.operation = VcVirtualDeviceConfigSpecOperation.add;
} else {
	// device found, reconfigure it
	deviceConfigSpec.operation = VcVirtualDeviceConfigSpecOperation.edit;
}

cdrom.backing = backingInfo;
cdrom.connectable = connectInfo;

deviceConfigSpec.device = cdrom;

var deviceConfigSpecs = new Array();
deviceConfigSpecs.push(deviceConfigSpec);

var configSpec = new VcVirtualMachineConfigSpec();
configSpec.deviceChange = deviceConfigSpecs;

// Launch the reconfigVM task
task = vm.reconfigVM_Task( configSpec );
]]></script>
    <in-binding>
      <bind name="vm" type="VC:VirtualMachine" export-name="vm"/>
      <bind name="cdrom" type="Any" export-name="cdrom"/>
      <bind name="connectAtPowerOn" type="boolean" export-name="connectAtPowerOn"/>
      <bind name="deviceType" type="string" export-name="deviceType"/>
      <bind name="filePath" type="string" export-name="filePath"/>
      <bind name="ideControllerKey" type="number" export-name="ideControllerKey"/>
    </in-binding>
    <out-binding>
      <bind name="task" type="VC:Task" export-name="task"/>
    </out-binding>
    <position y="282.68181818181813" x="465.0"/>
  </workflow-item>
  <workflow-item name="item8" out-name="item0" type="task">
    <display-name><![CDATA[Add IDE Bus 0]]></display-name>
    <script encoded="false"><![CDATA[var configSpec = new VcVirtualMachineConfigSpec();
var deviceConfigSpecs = new Array();
var deviceConfigSpec;

var controller = new VcVirtualIDEController();
controller.key = -1;
controller.device = new Array(0);
controller.busNumber = 0;
deviceConfigSpec = new VcVirtualDeviceConfigSpec();
deviceConfigSpec.device = controller;
deviceConfigSpec.operation = VcVirtualDeviceConfigSpecOperation.add;
deviceConfigSpecs[0] = deviceConfigSpec;

// List of devices
configSpec.deviceChange = deviceConfigSpecs;

// Launch the reconfigVM task
task = vm.reconfigVM_Task( configSpec );
]]></script>
    <in-binding>
      <bind name="vm" type="VC:VirtualMachine" export-name="vm"/>
    </in-binding>
    <out-binding>
      <bind name="task" type="VC:Task" export-name="task"/>
    </out-binding>
    <position y="100.86363636363636" x="545.0"/>
  </workflow-item>
  <workflow-item name="item11" out-name="item6" type="task">
    <display-name><![CDATA[Retrieve IDE Bus 0]]></display-name>
    <script encoded="false"><![CDATA[ideControllerKey = -1;
cdrom = null;
var devices = vm.config.hardware.device;
if ( devices != null )  {
	for ( ii in devices )  {
		if ( devices[ii] instanceof VcVirtualIDEController )  {
			if ( devices[ii].busNumber == 0 )  {
				ideControllerKey = devices[ii].key;
				System.log( "Found IDE controller (Key: " + ideControllerKey + ") for busNumber " + devices[ii].busNumber );
				break;
			}
		}
	}
}
]]></script>
    <in-binding>
      <bind name="vm" type="VC:VirtualMachine" export-name="vm"/>
    </in-binding>
    <out-binding>
      <bind name="ideControllerKey" type="number" export-name="ideControllerKey"/>
      <bind name="cdrom" type="Any" export-name="cdrom"/>
    </out-binding>
    <position y="209.95454545454544" x="545.0"/>
  </workflow-item>
  <workflow-item name="item14" color="3399ffff" out-name="item16" type="task">
    <display-name><![CDATA[Sucess]]></display-name>
    <script encoded="false"><![CDATA[System.log( "CD-ROM successfully mounted" );
]]></script>
    <in-binding>
      <bind name="vm" type="VC:VirtualMachine" export-name="vm"/>
    </in-binding>
    <out-binding/>
    <position y="346.3181818181818" x="605.0"/>
  </workflow-item>
  <workflow-item name="item16" type="end" end-mode="0">
    <position y="336.3181818181818" x="765.0"/>
  </workflow-item>
  <workflow-item name="item0" out-name="item11" type="task" script-module="com.vmware.library.vc.basic/vim3WaitTaskEnd">
    <display-name><![CDATA[vim3WaitTaskEnd]]></display-name>
    <script encoded="false"><![CDATA[//Auto generated script, cannot be modified !
actionResult = System.getModule("com.vmware.library.vc.basic").vim3WaitTaskEnd(task,progress,pollRate) ;]]></script>
    <in-binding>
      <bind name="task" type="VC:Task" export-name="task">
        <description><![CDATA[Task to Wait for]]></description>
      </bind>
      <bind name="progress" type="boolean" export-name="progress">
        <description><![CDATA[Log progess while waiting for the task]]></description>
      </bind>
      <bind name="pollRate" type="number" export-name="pollRate">
        <description><![CDATA[Polling rate for the task state [seconds]]]></description>
      </bind>
    </in-binding>
    <out-binding>
      <bind name="actionResult" type="Any" explicitly-not-bound="true" export-name="NULL"/>
    </out-binding>
    <description><![CDATA[Wait a VIM 3 Task to end.
When task ended, return the ]]></description>
    <position y="155.4090909090909" x="545.0"/>
  </workflow-item>
  <workflow-item name="item9" out-name="item14" type="task" script-module="com.vmware.library.vc.basic/vim3WaitTaskEnd">
    <display-name><![CDATA[vim3WaitTaskEnd]]></display-name>
    <script encoded="false"><![CDATA[//Auto generated script, cannot be modified !
actionResult = System.getModule("com.vmware.library.vc.basic").vim3WaitTaskEnd(task,progress,pollRate) ;]]></script>
    <in-binding>
      <bind name="task" type="VC:Task" export-name="task">
        <description><![CDATA[Task to Wait for]]></description>
      </bind>
      <bind name="progress" type="boolean" export-name="progress">
        <description><![CDATA[Log progess while waiting for the task]]></description>
      </bind>
      <bind name="pollRate" type="number" export-name="pollRate">
        <description><![CDATA[Polling rate for the task state [seconds]]]></description>
      </bind>
    </in-binding>
    <out-binding>
      <bind name="actionResult" type="Any" explicitly-not-bound="true" export-name="NULL"/>
    </out-binding>
    <description><![CDATA[Wait a VIM 3 Task to end.
When task ended, return the ]]></description>
    <position y="346.3181818181818" x="465.0"/>
  </workflow-item>
  <presentation>
    <p-step>
      <title><![CDATA[Mount CD-ROM]]></title>
      <p-group>
        <title><![CDATA[VM]]></title>
        <p-param name="vm">
          <desc><![CDATA[Virtual machine on which to mount a CD-ROM
]]></desc>
          <p-qual name="mandatory"><![CDATA[true]]></p-qual>
          <p-qual name="show-select-as"><![CDATA[list]]></p-qual>
        </p-param>
      </p-group>
      <p-group>
        <title><![CDATA[CD-ROM]]></title>
        <desc><![CDATA['connectAtPowerOn' field is ignored when selecting  "Client Device" device type.

'filePath' field is only taken into account when selecting "Datastore ISO File" device type.
]]></desc>
        <p-param name="connectAtPowerOn">
          <desc><![CDATA[Connect the CD-ROM when the virtual machine powers on
]]></desc>
          <p-qual name="defaultValue" type="boolean"><![CDATA[S|boolean|false]]></p-qual>
        </p-param>
        <p-param name="deviceType">
          <desc><![CDATA[Device type
]]></desc>
          <p-qual name="mandatory"><![CDATA[true]]></p-qual>
          <p-qual kind="ognl" name="linkedEnumeration" type="Array/string"><![CDATA[#deviceTypes]]></p-qual>
        </p-param>
        <p-param name="filePath">
          <desc><![CDATA[ISO file path in datastore file format, for example [MY_DATASTORE] data/image.iso
]]></desc>
        </p-param>
      </p-group>
    </p-step>
  </presentation>
</workflow>